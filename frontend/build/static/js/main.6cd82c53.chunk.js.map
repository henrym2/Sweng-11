{"version":3,"sources":["images/mlogo.png","images/logo.svg","components/LoginView.tsx","components/VoteView.tsx","components/VoteConfirmationView.tsx","components/UserSubmissionPage.tsx","components/AdminPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","LoginView","state","PrimaryButton","text","onClick","props","function","allowDisabledFocus","Component","labelStyle","FontWeights","semibold","root","justifyContent","VoteView","setVoteValue","val","setState","opinion","values","Stack","horizontalAlign","verticalAlign","verticalFill","styles","width","margin","textAlign","color","gap","Text","variant","horizontal","Item","align","Label","Slider","min","max","defaultValue","originFromZero","showValue","onChange","valueFormat","value","VoteConfirmationView","style","position","fontWeight","block","marginTop","UserSubmissionPage","cardTokens","childrenMargin","pageState","voterName","login","vote","require","post","submitter","then","response","console","log","catch","error","home","this","className","src","thermaLogo","alt","boxShadow","Depths","depth8","mlogo","CurrentView","AdminPage","Boolean","window","location","hostname","match","mergeStyles","selectors","padding","height","ReactDOM","render","Customizer","FluentCustomizations","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6cd82c53.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mlogo.0f7d3396.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.c5dea73d.svg\";","import React, { Component } from \"react\";\nimport {\n  Stack,\n  Text,\n  TextField,\n  FontWeights,\n  Button,\n  DefaultButton,\n  PrimaryButton,\n  IStackTokens\n} from \"office-ui-fabric-react\";\n\ntype MyProps = {\n  function: () => void;\n};\ntype MyState = {};\n\nexport class LoginView extends Component<MyProps, MyState> {\n  state: MyState = {};\n\n  render() {\n    return (\n      <>\n        <div>Login here!!</div>\n        <PrimaryButton\n          text=\"Log in\"\n          onClick={() => this.props.function()}\n          allowDisabledFocus\n        />\n      </>\n    );\n  }\n}\n\nexport default LoginView;\n","import React, { Component } from \"react\";\nimport {\n  Stack,\n  Text,\n  FontWeights,\n  PrimaryButton,\n  Label,\n  Slider,\n  IStackItemStyles,\n  textAreaProperties\n} from \"office-ui-fabric-react\";\nimport { render } from \"react-dom\";\n\nconst boldStyle = { root: { fontWeight: FontWeights.semibold } };\nconst labelStyle: IStackItemStyles = { root: { justifyContent: \"center\" } };\n\ntype MyProps = {\n  function: (opinion: number) => void;\n};\ntype MyState = {\n  opinion: number;\n};\n\nexport class VoteView extends Component<MyProps, MyState> {\n  setVoteValue = (val: number) => {\n    this.setState({ opinion: val });\n  };\n\n  state: MyState = {\n    opinion: 0\n  };\n\n  render() {\n    let values = [\n      \"Too Cold\",\n      \"A Bit Cold\",\n      \"Just Right\",\n      \"A Bit Hot\",\n      \"Too Hot\"\n    ];\n\n    return (\n      <Stack\n        horizontalAlign=\"center\"\n        verticalAlign=\"center\"\n        verticalFill\n        styles={{\n          root: {\n            width: \"100%\",\n            margin: \"0 auto\",\n            textAlign: \"center\",\n            color: \"#605e5c\"\n          }\n        }}\n        gap={50}\n      >\n        <Stack>\n          <Text variant=\"xxLarge\">How is the current temperature?</Text>\n        </Stack>\n        <Stack\n          horizontalAlign=\"center\"\n          styles={{\n            root: {\n              width: \"100%\"\n            }\n          }}\n          gap={15}\n        >\n          <Stack\n            horizontal\n            horizontalAlign=\"space-between\"\n            styles={{\n              root: {\n                width: \"100%\"\n              }\n            }}\n          >\n            <Stack.Item align=\"stretch\" styles={{ root: { width: \"15%\" } }}>\n              <Stack>\n                <Label styles={labelStyle}>Too Cold</Label>\n                <Label styles={labelStyle}>|</Label>\n              </Stack>\n            </Stack.Item>\n            <Stack.Item align=\"stretch\" styles={{ root: { width: \"15%\" } }}>\n              <Stack>\n                <Label styles={labelStyle}>A Bit Cold</Label>\n                <Label styles={labelStyle}>|</Label>\n              </Stack>\n            </Stack.Item>\n\n            <Stack.Item align=\"stretch\" styles={{ root: { width: \"15%\" } }}>\n              <Stack>\n                <Label styles={labelStyle}>Just Right</Label>\n                <Label styles={labelStyle}>|</Label>\n              </Stack>\n            </Stack.Item>\n            <Stack.Item align=\"stretch\" styles={{ root: { width: \"15%\" } }}>\n              <Stack>\n                <Label styles={labelStyle}>A Bit Hot</Label>\n                <Label styles={labelStyle}>|</Label>\n              </Stack>\n            </Stack.Item>\n            <Stack.Item align=\"stretch\" styles={{ root: { width: \"15%\" } }}>\n              <Stack>\n                <Label styles={labelStyle}>Too Hot</Label>\n                <Label styles={labelStyle}>|</Label>\n              </Stack>\n            </Stack.Item>\n          </Stack>\n          <Stack\n            styles={{\n              root: {\n                width: \"88%\"\n              }\n            }}\n          >\n            <Slider\n              min={-2}\n              max={2}\n              defaultValue={0}\n              originFromZero\n              showValue={false}\n              onChange={(val: number) => this.setVoteValue(val)}\n              valueFormat={(value: number) => values[value + 2]}\n            />\n          </Stack>\n        </Stack>\n        <Stack>\n          <PrimaryButton\n            text=\"Submit\"\n            onClick={() => this.props.function(this.state.opinion)}\n          />\n        </Stack>\n      </Stack>\n    );\n  }\n}\nexport default VoteView;\n","import React, { Component } from \"react\";\nimport { Stack, Text, TextField, FontWeights } from \"office-ui-fabric-react\";\nconst boldStyle = { root: { fontWeight: FontWeights.semibold } };\n\ntype MyProps = {\n  function: () => void;\n};\ntype MyState = {};\n\nexport class VoteConfirmationView extends Component<MyProps, MyState> {\n  render() {\n    return (\n      <div\n        style={{ position: \"relative\", margin: \"auto\", textAlign: \"center\" }}\n      >\n        <Text\n          variant=\"xxLarge\"\n          style={{\n            margin: \"auto\",\n            textAlign: \"center\",\n            fontWeight: \"bold\"\n          }}\n        >\n          Thank you for your vote\n        </Text>\n        <Text\n          variant=\"large\"\n          block={true}\n          style={{ marginTop: \"20px\", textAlign: \"center\" }}\n        >\n          Our maintenance team is on the way.\n        </Text>\n        <Text\n          variant=\"large\"\n          block={true}\n          style={{ marginTop: \"10px\", textAlign: \"center\" }}\n        >\n          Have a nice day!{\" \"}\n        </Text>\n      </div>\n    );\n  }\n}\n\nexport default VoteConfirmationView;\n","import React, { Component } from \"react\";\nimport \"./UserSubmissionPage.css\";\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\nimport { ICardTokens } from \"@uifabric/react-cards\";\nimport mlogo from \"../images/mlogo.png\";\nimport thermaLogo from \"../images/logo.svg\";\nimport LoginView from \"./LoginView\";\nimport VoteView from \"./VoteView\";\nimport VoteConfirmationView from \"./VoteConfirmationView\";\n\ntype MyProps = {};\ntype MyState = {\n  pageState: number;\n  voterName: String;\n};\n\nexport class UserSubmissionPage extends Component<MyProps, MyState> {\n  cardTokens: ICardTokens = { childrenMargin: 12 };\n\n  state: MyState = {\n    pageState: 0,\n    voterName: \"Testy McTestFace\"\n  };\n\n  login = () => {\n    this.setState({ pageState: 1 }); //Log in -> change page state to 1\n  };\n\n  vote = (opinion: number) => {\n    //Make post request to server (on localhost for now)\n    const axios = require(\"axios\");\n    axios\n      .post(\"http://localhost:8080/vote\", {\n        submitter: this.state.voterName,\n        opinion: opinion\n      })\n      .then(function(response: String) {\n        // console.log(response);\n        console.log(\"User has voted: \" + opinion);\n      })\n      .catch(function(error: String) {\n        console.log(error);\n      });\n\n    this.setState({ pageState: 2 }); //Display thank you message - change page state to 2\n  };\n\n  home = () => {\n    this.setState({ pageState: 0 }); //Return to the login page\n  };\n\n  CurrentView() {\n    switch (this.state.pageState) {\n      case 0:\n        return (\n          <>\n            <LoginView function={this.login} />\n          </>\n        );\n      case 1:\n        return <VoteView function={this.vote} />;\n      case 2:\n        return <VoteConfirmationView function={this.home} />;\n      default:\n        return <LoginView function={this.login} />;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"submission-page__main\">\n        <div className=\"submission-page__centre\">\n          <img\n            src={thermaLogo}\n            alt=\"ThermaPoll\"\n            className=\"submission-page__main-logo\"\n          />\n          <div\n            className=\"submission-page__inner-box\"\n            style={{ boxShadow: Depths.depth8 }}\n          >\n            <img\n              src={mlogo}\n              alt=\"Microsoft Logo\"\n              className=\"submission-page__logo\"\n            />\n\n            <div className=\"submission-page__view\">{this.CurrentView()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserSubmissionPage;\n","import React, { Component } from \"react\";\nimport \"./UserSubmissionPage.css\";\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\nimport { ICardTokens } from \"@uifabric/react-cards\";\nimport mlogo from \"../images/mlogo.png\";\nimport thermaLogo from \"../images/logo.svg\";\nimport LoginView from \"./LoginView\";\nimport VoteView from \"./VoteView\";\nimport VoteConfirmationView from \"./VoteConfirmationView\";\n\ntype MyProps = {};\ntype MyState = {\n  pageState: number;\n  voterName: String;\n};\n\nexport class AdminPage extends Component<MyProps, MyState> {\n  cardTokens: ICardTokens = { childrenMargin: 12 };\n\n  state: MyState = {\n    pageState: 0,\n    voterName: \"Testy McTestFace\"\n  };\n\n  render() {\n    return (\n      <div className=\"submission-page__main\">\n        <div className=\"submission-page__centre\">\n          <img\n            src={thermaLogo}\n            alt=\"ThermaPoll\"\n            className=\"submission-page__main-logo\"\n          />\n          <div\n            className=\"submission-page__inner-box\"\n            style={{ boxShadow: Depths.depth8 }}\n          >\n            <img\n              src={mlogo}\n              alt=\"Microsoft Logo\"\n              className=\"submission-page__logo\"\n            />\n            ADMIN PAGE -> We'll change this full page to be similar to the\n            mockups!\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AdminPage;\n","import React from \"react\";\nimport { Stack, Text, Link, FontWeights } from \"office-ui-fabric-react\";\nimport { UserSubmissionPage } from \"./components/UserSubmissionPage\";\nimport { AdminPage } from \"./components/AdminPage\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nconst boldStyle = { root: { fontWeight: FontWeights.semibold } };\n\nexport const App: React.FunctionComponent = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <UserSubmissionPage />\n        </Route>\n        <Route path=\"/admin\">\n          <AdminPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { FluentCustomizations } from '@uifabric/fluent-theme';\nimport { Customizer, mergeStyles } from 'office-ui-fabric-react';\nimport * as serviceWorker from './serviceWorker';\n\n// Inject some global styles\nmergeStyles({\n  selectors: {\n    ':global(body), :global(html), :global(#root)': {\n      margin: 0,\n      padding: 0,\n      height: '100vh'\n    }\n  }\n});\n\nReactDOM.render(\n  <Customizer {...FluentCustomizations}>\n    <App />\n  </Customizer>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}