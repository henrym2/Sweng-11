{"version":3,"sources":["components/LoginView.tsx","components/VoteView.tsx","components/VoteConfirmationView.tsx","components/UserSubmissionPage.tsx","components/AdminNotification.tsx","components/SideBarButton.tsx","components/AdminPage.tsx","App.tsx","serviceWorker.ts","index.tsx","images/mlogo.png","images/logo.svg","images/logo-white.svg","images/alert-icon.svg","images/map-icon.svg","images/floor-plan.svg"],"names":["LoginView","state","name","employeeNumber","onChanged","newValue","setState","onChangedEmployeeNumber","TextField","label","placeholder","this","Button","buttonType","ButtonType","primary","onClick","props","function","Component","labelStyle","FontWeights","semibold","root","justifyContent","VoteView","setVoteValue","val","opinion","values","Stack","horizontalAlign","verticalAlign","verticalFill","styles","width","margin","textAlign","color","gap","Text","variant","horizontal","Item","align","Label","Slider","min","max","defaultValue","originFromZero","showValue","onChange","valueFormat","value","PrimaryButton","text","VoteConfirmationView","style","position","fontWeight","block","marginTop","UserSubmissionPage","cardTokens","childrenMargin","pageState","voterName","showAdmin","login","console","log","vote","require","post","submitter","then","response","catch","error","home","showAdminPage","className","from","to","src","thermaLogo","alt","boxShadow","Depths","depth8","mlogo","CurrentView","textDecoration","cursor","AdminNotification","dismiss","notificationID","titleStyles","fontSize","bold","Card","tokens","maxWidth","minWidth","minHeight","marginBottom","Section","fill","title","description","Link","alignSelf","IconButton","iconProps","iconName","SideBarButton","lineHeight","switchDisplay","display","flexDirection","height","borderBottom","backgroundColor","icon","marginRight","AdminPage","showZoneInfo","selectedZone","alerts","setIsShown","zone","show","floorPlanScreen","floorPlan","onMouseEnter","onMouseLeave","viewAlerts","viewFloorplan","dismissNotification","id","axios","res","status","get","data","alertScreen","listItems","map","item","content","area","_id","alertIcon","mapIcon","initializeIcons","App","exact","path","Boolean","window","location","hostname","match","mergeStyles","selectors","padding","ReactDOM","render","Customizer","FluentCustomizations","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.653d1dcf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Stack,\n  Text,\n  DefaultButton,\n  PrimaryButton,\n  IStackTokens,\n  Button,\n  TextField,\n  ButtonType\n} from \"office-ui-fabric-react\";\n\ntype MyProps = {\n  function: (name: string, employeeNumber: string) => void;\n};\ntype MyState = {\n  name: string;\n  employeeNumber: string;\n};\n\nexport class LoginView extends Component<MyProps, MyState> {\n  state: MyState = {\n    name: \"\",\n    employeeNumber: \"\"\n  };\n\n  render() {\n    return (\n      <>\n        <TextField\n          label=\"Login to submit a vote\"\n          placeholder=\"First Name\"\n          onChanged={this.onChanged}\n        />\n        <TextField\n          label=\"Employee Number\"\n          placeholder=\"e.g. 18372936\"\n          onChanged={this.onChangedEmployeeNumber}\n        />\n\n        <p></p>\n        <Button\n          buttonType={ButtonType.primary}\n          onClick={() =>\n            this.props.function(this.state.name, this.state.employeeNumber)\n          }\n        >\n          Log In\n        </Button>\n      </>\n    );\n  }\n\n  onChanged = (newValue: string) => {\n    this.setState({ name: newValue });\n  };\n  onChangedEmployeeNumber = (newValue: string) => {\n    this.setState({ employeeNumber: newValue });\n  };\n}\n\nexport default LoginView;\n","import React, { Component } from \"react\";\nimport {\n  Stack,\n  Text,\n  FontWeights,\n  PrimaryButton,\n  Label,\n  Slider,\n  IStackItemStyles,\n  textAreaProperties\n} from \"office-ui-fabric-react\";\nimport { render } from \"react-dom\";\n\nconst boldStyle = { root: { fontWeight: FontWeights.semibold } };\nconst labelStyle: IStackItemStyles = { root: { justifyContent: \"center\" } };\n\ntype MyProps = {\n  function: (opinion: number) => void;\n};\ntype MyState = {\n  opinion: number;\n};\n\nexport class VoteView extends Component<MyProps, MyState> {\n  setVoteValue = (val: number) => {\n    this.setState({ opinion: val });\n  };\n\n  state: MyState = {\n    opinion: 0\n  };\n\n  render() {\n    let values = [\n      \"Too Cold\",\n      \"A Bit Cold\",\n      \"Just Right\",\n      \"A Bit Hot\",\n      \"Too Hot\"\n    ];\n\n    return (\n      <Stack\n        horizontalAlign=\"center\"\n        verticalAlign=\"center\"\n        verticalFill\n        styles={{\n          root: {\n            width: \"100%\",\n            margin: \"0 auto\",\n            textAlign: \"center\",\n            color: \"#605e5c\"\n          }\n        }}\n        gap={50}\n      >\n        <Stack>\n          <Text variant=\"xxLarge\">How is the current temperature?</Text>\n        </Stack>\n        <Stack\n          horizontalAlign=\"center\"\n          styles={{\n            root: {\n              width: \"100%\"\n            }\n          }}\n          gap={15}\n        >\n          <Stack\n            horizontal\n            horizontalAlign=\"space-between\"\n            styles={{\n              root: {\n                width: \"100%\"\n              }\n            }}\n          >\n            <Stack.Item align=\"stretch\" styles={{ root: { width: \"15%\" } }}>\n              <Stack>\n                <Label styles={labelStyle}>Too Cold</Label>\n                <Label styles={labelStyle}>|</Label>\n              </Stack>\n            </Stack.Item>\n            <Stack.Item align=\"stretch\" styles={{ root: { width: \"15%\" } }}>\n              <Stack>\n                <Label styles={labelStyle}>A Bit Cold</Label>\n                <Label styles={labelStyle}>|</Label>\n              </Stack>\n            </Stack.Item>\n\n            <Stack.Item align=\"stretch\" styles={{ root: { width: \"15%\" } }}>\n              <Stack>\n                <Label styles={labelStyle}>Just Right</Label>\n                <Label styles={labelStyle}>|</Label>\n              </Stack>\n            </Stack.Item>\n            <Stack.Item align=\"stretch\" styles={{ root: { width: \"15%\" } }}>\n              <Stack>\n                <Label styles={labelStyle}>A Bit Hot</Label>\n                <Label styles={labelStyle}>|</Label>\n              </Stack>\n            </Stack.Item>\n            <Stack.Item align=\"stretch\" styles={{ root: { width: \"15%\" } }}>\n              <Stack>\n                <Label styles={labelStyle}>Too Hot</Label>\n                <Label styles={labelStyle}>|</Label>\n              </Stack>\n            </Stack.Item>\n          </Stack>\n          <Stack\n            styles={{\n              root: {\n                width: \"88%\"\n              }\n            }}\n          >\n            <Slider\n              min={-2}\n              max={2}\n              defaultValue={0}\n              originFromZero\n              showValue={false}\n              onChange={(val: number) => this.setVoteValue(val)}\n              valueFormat={(value: number) => values[value + 2]}\n            />\n          </Stack>\n        </Stack>\n        <Stack>\n          <PrimaryButton\n            text=\"Submit\"\n            onClick={() => this.props.function(this.state.opinion)}\n          />\n        </Stack>\n      </Stack>\n    );\n  }\n}\nexport default VoteView;\n","import React, { Component } from \"react\";\nimport {\n  Stack,\n  Button,\n  Text,\n  TextField,\n  FontWeights,\n  ButtonType\n} from \"office-ui-fabric-react\";\nconst boldStyle = { root: { fontWeight: FontWeights.semibold } };\n\ntype MyProps = {\n  function: () => void;\n  name: String;\n};\ntype MyState = {};\n\nexport class VoteConfirmationView extends Component<MyProps, MyState> {\n  render() {\n    return (\n      <div\n        style={{ position: \"relative\", margin: \"auto\", textAlign: \"center\" }}\n      >\n        <Text\n          variant=\"xxLarge\"\n          style={{\n            margin: \"auto\",\n            textAlign: \"center\",\n            fontWeight: \"bold\"\n          }}\n        >\n          Thanks {this.props.name} for your vote\n        </Text>\n        <Text\n          variant=\"large\"\n          block={true}\n          style={{ marginTop: \"20px\", textAlign: \"center\" }}\n        >\n          Our maintenance team is on the way. Have a nice day!\n        </Text>\n        <p></p>\n        <Button\n          buttonType={ButtonType.primary}\n          onClick={() => this.props.function()}\n        >\n          Retry\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default VoteConfirmationView;\n","import React, { Component } from \"react\";\nimport \"./UserSubmissionPage.css\";\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\nimport { ICardTokens } from \"@uifabric/react-cards\";\nimport mlogo from \"../images/mlogo.png\";\nimport thermaLogo from \"../images/logo.svg\";\nimport LoginView from \"./LoginView\";\nimport VoteView from \"./VoteView\";\nimport VoteConfirmationView from \"./VoteConfirmationView\";\nimport { Redirect } from \"react-router-dom\";\n\ntype MyProps = {};\ntype MyState = {\n  pageState: number;\n  voterName: String;\n  employeeNumber: String;\n  showAdmin: boolean;\n};\n\nexport class UserSubmissionPage extends Component<MyProps, MyState> {\n  cardTokens: ICardTokens = { childrenMargin: 12 };\n\n  state: MyState = {\n    pageState: 0,\n    voterName: \"Testy McTestFace\",\n    employeeNumber: \"\",\n    showAdmin: false\n  };\n\n  login = (name: String, employeeNumber: String) => {\n    this.setState({\n      pageState: 1,\n      voterName: name,\n      employeeNumber: employeeNumber\n    }); //Log in -> change page state to 1\n    console.log(\"Thanks \" + name);\n  };\n\n  vote = (opinion: number) => {\n    //Make post request to server (on localhost for now)\n    const axios = require(\"axios\");\n    axios\n      .post(\"https://thermapollbackend.azurewebsites.net/vote\", {\n        submitter: this.state.voterName,\n        opinion: opinion\n      })\n      .then(function(response: String) {\n        // console.log(response);\n        console.log(\"User has voted: \" + opinion);\n      })\n      .catch(function(error: String) {\n        console.log(error);\n      });\n\n    this.setState({ pageState: 2 }); //Display thank you message - change page state to 2\n  };\n\n  home = () => {\n    this.setState({ pageState: 0 }); //Return to the login page\n  };\n  showAdminPage = () => {\n    this.setState({ showAdmin: true });\n  };\n\n  CurrentView() {\n    switch (this.state.pageState) {\n      case 0:\n        return (\n          <>\n            <LoginView function={this.login} />\n          </>\n        );\n      case 1:\n        return <VoteView function={this.vote} />;\n      case 2:\n        return (\n          <VoteConfirmationView\n            function={this.home}\n            name={this.state.voterName}\n          />\n        );\n      default:\n        return <LoginView function={this.login} />;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"submission-page__main\">\n        {this.state.showAdmin && <Redirect from=\"/\" to=\"/admin\" />}\n\n        <div className=\"submission-page__centre\">\n          <img\n            src={thermaLogo}\n            alt=\"ThermaPoll\"\n            className=\"submission-page__main-logo\"\n          />\n          <div\n            className=\"submission-page__inner-box\"\n            style={{ boxShadow: Depths.depth8 }}\n          >\n            <img\n              src={mlogo}\n              alt=\"Microsoft Logo\"\n              className=\"submission-page__logo\"\n            />\n\n            <div className=\"submission-page__view\">{this.CurrentView()}</div>\n          </div>\n          <div\n            style={{\n              textAlign: \"center\",\n              textDecoration: \"underline\",\n              marginTop: \"20px\",\n              cursor: \"grab\",\n              color: \"lightgrey\"\n            }}\n            onClick={this.showAdminPage}\n          >\n            Admin Page\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserSubmissionPage;\n","import React, { Component } from \"react\";\r\nimport \"./AdminPage.css\";\r\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\r\nimport {\r\n  Card,\r\n  ICardTokens,\r\n  ICardStyles,\r\n  ICardSectionStyles\r\n} from \"@uifabric/react-cards\";\r\nimport {\r\n  Text,\r\n  ITextStyles,\r\n  FontWeights,\r\n  Link,\r\n  ILinkStyles,\r\n  IconButton,\r\n  Stack,\r\n  IIconProps,\r\n  IIconStyles\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport type NotificationProps = {\r\n  title: string;\r\n  description: string;\r\n  notificationID: number;\r\n  dismiss: (id: number) => void;\r\n};\r\n\r\nexport default class AdminNotification extends Component<NotificationProps> {\r\n  dismiss = () => {\r\n    this.props.dismiss(this.props.notificationID);\r\n  };\r\n  render() {\r\n    const cardStyles: ICardStyles = {\r\n      root: {\r\n        width: \"100%\",\r\n        maxWidth: \"100%\",\r\n        minWidth: \"400px\",\r\n        minHeight: \"120px\",\r\n        marginBottom: \"25px\"\r\n      }\r\n    };\r\n\r\n    const cardTokens: ICardTokens = {};\r\n\r\n    const titleStyles: ITextStyles = {\r\n      root: {\r\n        fontSize: 22,\r\n        fontWeight: FontWeights.bold\r\n      }\r\n    };\r\n\r\n    const descriptionStyles: ITextStyles = {\r\n      root: {\r\n        fontSize: 18,\r\n        marginTop: 2\r\n      }\r\n    };\r\n\r\n    const linkStyles: ILinkStyles = {\r\n      root: {\r\n        textDecoration: \"underline\",\r\n        fontSize: 16,\r\n        marginTop: 2,\r\n        color: \"#E85B6D\"\r\n      }\r\n    };\r\n\r\n    const cardSectionStyles: ICardSectionStyles = {\r\n      root: {\r\n        width: \"95%\",\r\n        margin: \"10px 15px\"\r\n      }\r\n    };\r\n\r\n    const buttonSectionStyles: ICardSectionStyles = {\r\n      root: {\r\n        alignSelf: \"stretch\",\r\n        margin: 10\r\n      }\r\n    };\r\n\r\n    const buttonProps: IIconProps = {\r\n      iconName: \"Cancel\"\r\n    };\r\n\r\n    const buttonStyles: IIconStyles = {\r\n      root: {\r\n        color: \"grey\"\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Card tokens={cardTokens} horizontal styles={cardStyles}>\r\n        <Card.Section styles={cardSectionStyles} fill>\r\n          <Text styles={titleStyles}>{this.props.title}</Text>\r\n          <Text styles={descriptionStyles}>{this.props.description}</Text>\r\n          <Link styles={linkStyles}>More details</Link>\r\n        </Card.Section>\r\n        <Card.Section styles={buttonSectionStyles}>\r\n          <IconButton\r\n            iconProps={buttonProps}\r\n            styles={buttonStyles}\r\n            onClick={this.dismiss}\r\n          />\r\n        </Card.Section>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\n\nimport { Text, ITextStyles, FontWeights } from \"office-ui-fabric-react\";\n\ntype CardProps = {\n  title: string;\n  icon: string;\n  color: string;\n  switchDisplay: () => void;\n};\n\nexport default class SideBarButton extends Component<CardProps> {\n  titleStyles: ITextStyles = {\n    root: {\n      fontSize: 22,\n      fontWeight: FontWeights.bold,\n      margin: \"auto\",\n      lineHeight: \"100px\"\n    }\n  };\n\n  render() {\n    return (\n      <aside\n        onClick={() => this.props.switchDisplay()}\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          height: \"100px\",\n          borderBottom: \"1px solid #DCDCDC\",\n          backgroundColor: this.props.color\n        }}\n      >\n        <div style={{ margin: \"auto\" }}>\n          <img\n            src={this.props.icon}\n            style={{\n              width: \"30px\",\n              marginRight: \"15px\"\n            }}\n          />\n          <Text styles={this.titleStyles}>{this.props.title}</Text>\n        </div>\n      </aside>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./AdminPage.css\";\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\nimport { ICardTokens } from \"@uifabric/react-cards\";\nimport mlogo from \"../images/mlogo.png\";\nimport thermaLogo from \"../images/logo-white.svg\";\nimport AdminNotification from \"./AdminNotification\";\nimport SideBarButton from \"./SideBarButton\";\nimport alertIcon from \"../images/alert-icon.svg\";\nimport mapIcon from \"../images/map-icon.svg\";\nimport floorPlan from \"../images/floor-plan.svg\";\nimport axios from \"axios\";\n\nimport {\n  Stack,\n  Text,\n  DefaultButton,\n  PrimaryButton,\n  IStackTokens,\n  Button,\n  TextField,\n  ButtonType,\n  calculatePrecision\n} from \"office-ui-fabric-react\";\n\ntype MyProps = {};\ntype MyState = {\n  pageState: number;\n\n  showZoneInfo: boolean;\n  selectedZone: number;\n  alerts: any;\n};\n\nexport class AdminPage extends Component<MyProps, MyState> {\n  cardTokens: ICardTokens = { childrenMargin: 12 };\n\n  state: MyState = {\n    pageState: 0,\n    showZoneInfo: false,\n    selectedZone: 0,\n    alerts: []\n  };\n\n  setIsShown = (zone, show) => {\n    this.setState({ showZoneInfo: show, selectedZone: zone });\n  };\n\n  componentDidMount(): void {\n    axios\n      .get(\"https://thermapollbackend.azurewebsites.net/alerts\")\n      .then(res => {\n        console.log(res.data);\n        this.setState({ alerts: res.data });\n      });\n  }\n\n  floorPlanScreen = () => {\n    return (\n      <div className=\"admin-page__floor-plan\">\n        {this.state.showZoneInfo && (\n          <div className=\"admin-page__display-zone-info\">\n            <h3>Zone {this.state.selectedZone}</h3>\n            Information about the temperature in zone {\n              this.state.selectedZone\n            }{\" \"}\n            ...\n          </div>\n        )}\n        <div className=\"admin-page__box\">\n          <img src={floorPlan} />\n          <div\n            className=\"admin-page__zone1\"\n            onMouseEnter={() => this.setIsShown(1, true)}\n            onMouseLeave={() => this.setIsShown(1, false)}\n          ></div>\n          <div\n            className=\"admin-page__zone2\"\n            onMouseEnter={() => this.setIsShown(2, true)}\n            onMouseLeave={() => this.setIsShown(2, false)}\n          ></div>\n          <div\n            className=\"admin-page__zone3\"\n            onMouseEnter={() => this.setIsShown(3, true)}\n            onMouseLeave={() => this.setIsShown(3, false)}\n          ></div>\n          <div\n            className=\"admin-page__zone4\"\n            onMouseEnter={() => this.setIsShown(4, true)}\n            onMouseLeave={() => this.setIsShown(4, false)}\n          ></div>\n          <div\n            className=\"admin-page__zone5\"\n            onMouseEnter={() => this.setIsShown(5, true)}\n            onMouseLeave={() => this.setIsShown(5, false)}\n          ></div>\n          <div\n            className=\"admin-page__zone6\"\n            onMouseEnter={() => this.setIsShown(6, true)}\n            onMouseLeave={() => this.setIsShown(6, false)}\n          ></div>\n          <div\n            className=\"admin-page__zone7\"\n            onMouseEnter={() => this.setIsShown(7, true)}\n            onMouseLeave={() => this.setIsShown(7, false)}\n          ></div>\n          <div\n            className=\"admin-page__zone8\"\n            onMouseEnter={() => this.setIsShown(8, true)}\n            onMouseLeave={() => this.setIsShown(8, false)}\n          ></div>\n          <div\n            className=\"admin-page__zone9\"\n            onMouseEnter={() => this.setIsShown(9, true)}\n            onMouseLeave={() => this.setIsShown(9, false)}\n          ></div>\n          <div\n            className=\"admin-page__zone10\"\n            onMouseEnter={() => this.setIsShown(10, true)}\n            onMouseLeave={() => this.setIsShown(10, false)}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  viewAlerts = () => {\n    this.setState({ pageState: 0 });\n  };\n\n  viewFloorplan = () => {\n    this.setState({ pageState: 1 });\n  };\n\n  dismissNotification = (id: number) => {\n    axios\n      .post(\"https://thermapollbackend.azurewebsites.net/dismissAlert\", {\n        id: id\n      })\n      .then(res => {\n        if (res.status == 200) {\n          axios\n            .get(\"https://thermapollbackend.azurewebsites.net/alerts\")\n            .then(res => {\n              console.log(res.data);\n              this.setState({ alerts: res.data });\n            });\n        }\n      });\n  };\n\n  alertScreen = () => {\n    let list = this.state.alerts;\n    const listItems = list.map(item => (\n      <AdminNotification\n        title=\"Temperature Adjustment Required\"\n        description={`A temperature adjustment is needed in ${item.content[0].area}`}\n        dismiss={this.dismissNotification}\n        notificationID={item._id}\n      />\n    ));\n    return <div className=\"admin-page__notifications\">{listItems}</div>;\n  };\n\n  render() {\n    return (\n      <div className=\"admin-page__main\">\n        <div className=\"admin-page__top-bar\">\n          <img\n            src={thermaLogo}\n            alt=\"therma logo\"\n            className=\"admin-page__logo \"\n          />\n          Top Bar (Milu)\n        </div>\n        <div className=\"admin-page__bottom\">\n          <div className=\"admin-page__side-bar\">\n            <SideBarButton\n              title=\"Alerts &amp; Notifications\"\n              icon={alertIcon}\n              color={this.state.pageState == 0 ? \"#F8F8FF\" : \"white\"}\n              switchDisplay={() => this.viewAlerts()}\n            />\n            <SideBarButton\n              title=\"Floorplan &amp; Heatmap\"\n              icon={mapIcon}\n              color={this.state.pageState == 1 ? \"#F8F8FF\" : \"white\"}\n              switchDisplay={() => this.viewFloorplan()}\n            />\n          </div>\n          {this.state.pageState == 0\n            ? this.alertScreen()\n            : this.floorPlanScreen()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AdminPage;\n","import React, { Component } from \"react\";\r\nimport { Stack, Text, Link, FontWeights } from \"office-ui-fabric-react\";\r\nimport { initializeIcons } from \"@uifabric/icons\";\r\nimport { UserSubmissionPage } from \"./components/UserSubmissionPage\";\r\nimport { AdminPage } from \"./components/AdminPage\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  RouteComponentProps\r\n} from \"react-router-dom\";\r\nconst boldStyle = { root: { fontWeight: FontWeights.semibold } };\r\n\r\ninitializeIcons();\r\n\r\ninterface Props extends RouteComponentProps<any> {\r\n  /* Parent component's props*/\r\n}\r\n\r\nexport class App extends Component<Props, {}> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <UserSubmissionPage />\r\n          </Route>\r\n          <Route path=\"/admin\">\r\n            <AdminPage />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { FluentCustomizations } from '@uifabric/fluent-theme';\nimport { Customizer, mergeStyles } from 'office-ui-fabric-react';\nimport * as serviceWorker from './serviceWorker';\n\n// Inject some global styles\nmergeStyles({\n  selectors: {\n    ':global(body), :global(html), :global(#root)': {\n      margin: 0,\n      padding: 0,\n      height: '100vh'\n    }\n  }\n});\n\nReactDOM.render(\n  <Customizer {...FluentCustomizations}>\n    <App />\n  </Customizer>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mlogo.0f7d3396.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.c5dea73d.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.9b26b24a.svg\";","module.exports = __webpack_public_path__ + \"static/media/alert-icon.f3ce15dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/map-icon.c5e34797.svg\";","module.exports = __webpack_public_path__ + \"static/media/floor-plan.164e8a2a.svg\";"],"sourceRoot":""}